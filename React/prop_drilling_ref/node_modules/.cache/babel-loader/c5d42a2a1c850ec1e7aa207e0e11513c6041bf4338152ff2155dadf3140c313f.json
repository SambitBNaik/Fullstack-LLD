{"ast":null,"code":"var _jsxFileName = \"D:\\\\Scaler html\\\\React\\\\prop_drilling_ref\\\\src\\\\Reference\\\\Reference.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\n\n// I want to presist the value between multiple\n// re-renders calls without using state hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reference = () => {\n  _s();\n  const [name, SetName] = useState(\"\");\n  // const[count,setCount]=useState(0);\n  let count1 = useRef(0);\n  const [showMessage, setShowMessage] = useState(false);\n  useEffect(() => {\n    setCount(prevCount => prevCount + 1);\n  }, [name, showMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Reference\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => SetName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Number of times component got rendred \", count, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setShowMessage(true);\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), showMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Show message is true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Reference, \"7HRtRhMz6cvnOixDtem5CF5AnTg=\");\n_c = Reference;\nexport default Reference;\nvar _c;\n$RefreshReg$(_c, \"Reference\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Reference","_s","name","SetName","count1","showMessage","setShowMessage","setCount","prevCount","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","count","onClick","_c","$RefreshReg$"],"sources":["D:/Scaler html/React/prop_drilling_ref/src/Reference/Reference.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\n\r\n\r\n// I want to presist the value between multiple\r\n// re-renders calls without using state hook\r\nconst Reference = () => {\r\n    const[name,SetName]= useState(\"\");\r\n    // const[count,setCount]=useState(0);\r\n    let count1=useRef(0);\r\n    const[showMessage,setShowMessage]=useState(false);\r\n\r\n    useEffect(()=>{\r\n        setCount((prevCount)=> prevCount+1);\r\n    },[name,showMessage]);\r\n  return (\r\n    <div>\r\n        <div>Reference</div>\r\n        <input value={name} onChange={(e)=>SetName(e.target.value)}/>\r\n        <div>Number of times component got rendred {count}.</div>\r\n        <button onClick={()=>{setShowMessage(true)}}>Submit</button>\r\n        {showMessage &&<div>Show message is true</div> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Reference"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;;AAG1D;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAAEN,QAAQ,CAAC,EAAE,CAAC;EACjC;EACA,IAAIO,MAAM,GAACR,MAAM,CAAC,CAAC,CAAC;EACpB,MAAK,CAACS,WAAW,EAACC,cAAc,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EAEjDF,SAAS,CAAC,MAAI;IACVY,QAAQ,CAAEC,SAAS,IAAIA,SAAS,GAAC,CAAC,CAAC;EACvC,CAAC,EAAC,CAACN,IAAI,EAACG,WAAW,CAAC,CAAC;EACvB,oBACEN,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAK;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBd,OAAA;MAAOe,KAAK,EAAEZ,IAAK;MAACa,QAAQ,EAAGC,CAAC,IAAGb,OAAO,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC7Dd,OAAA;MAAAU,QAAA,GAAK,wCAAsC,EAACS,KAAK,EAAC,GAAC;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzDd,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAI;QAACb,cAAc,CAAC,IAAI,CAAC;MAAA,CAAE;MAAAG,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3DR,WAAW,iBAAGN,OAAA;MAAAU,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAAAZ,EAAA,CAlBKD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAoBf,eAAeA,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}